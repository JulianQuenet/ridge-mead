/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 sideRoom.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'


interface triggerProps{
  writing : Boolean;
}


export function SideRoom(props:triggerProps) {
  const {writing} = props
  const { nodes, materials }:any = useGLTF('/sideRoom.glb')


  const sense = writing? "Walls" : "Walls.001"

  return (
    <group dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={[0.02, 0.017, 0.015]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[154.73, 167.839, 79.536]} rotation={[Math.PI, 0, Math.PI]}>
            <mesh geometry={nodes.Window_Window_0.geometry} material={materials['Window.001']} position={[-256, 20.472, -2081.853]} rotation={[0, -Math.PI / 2, 0]} scale={[1, 1.079, 1.023]} />
          </group>
          <mesh geometry={nodes.Walls_Walls_0.geometry} material={materials[sense]} position={[493, 23, 1965]} rotation={[0, -Math.PI / 2, 0]} scale={[1.247, 1, 1]} />
        </group>
      </group>
      <group position={[4.3, 3.611, 34.363]} rotation={[-Math.PI / 2, 0.313, 1.561]} scale={[0.26, 0.349, 0.346]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.defaultMaterial007.geometry} material={materials['Black_Glass.001']} />
          <mesh geometry={nodes.defaultMaterial008.geometry} material={materials['Camera_Plastic.001']} />
        </group>
      </group>
      <group position={[4.751, 0, 42.75]} rotation={[-Math.PI / 2, 0, 3.139]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.material} position={[-5, -1.925, 0]} />
      </group>
      <mesh geometry={nodes.Cube.geometry} material={materials.Walls} position={[1, 0.074, 36.866]} />
    </group>
  )
}

useGLTF.preload('/sideRoom.glb')

 /* { !room && <group rotation={[-Math.PI / 2, 0, 0]} scale={[0.02, 0.017, 0.015]}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <group position={[154.73, 167.839, 79.536]} rotation={[Math.PI, 0, Math.PI]}>
          <mesh geometry={nodes.Window_Window_0.geometry} material={materials['Window.001']} position={[-8.814, 6.47, -2081.853]} rotation={[0, -Math.PI / 2, 0]} scale={[1, 1.079, 1.023]} />
        </group>
        <mesh geometry={nodes.Walls_Walls_0.geometry} material={materials[sense]} position={[241.756, 9.178, 1965]} rotation={[0, -Math.PI / 2, 0]} scale={[1.247, 1, 1]} />
      </group>
    </group>}
    <group position={[-0.814, 3.611, 34.363]} rotation={[-Math.PI / 2, 0.313, 1.561]} scale={[0.26, 0.349, 0.346]}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.defaultMaterial007.geometry} material={materials['Black_Glass.001']} />
        <mesh geometry={nodes.defaultMaterial008.geometry} material={materials['Camera_Plastic.001']} />
      </group>
    </group>
    { !room && <group position={[4.751, 0, 41.75]} rotation={[-Math.PI / 2, 0, 3.139]}>
      <mesh geometry={nodes.Object_2.geometry} material={materials.material} position={[0.004, -1.704, 0]} />
    </group>} */